// <auto-generated />
using System;
using GameServer.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameServer.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250410045916_RoomExitsNotMapped3")]
    partial class RoomExitsNotMapped3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("GameServer.Core.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PressenceText")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("GameServer.Core.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("GameServer.Core.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("RoomId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("GameServer.Core.Entity", b =>
                {
                    b.HasOne("GameServer.Core.Room", null)
                        .WithMany("Entities")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("GameServer.Core.Room", b =>
                {
                    b.HasOne("GameServer.Core.Region", null)
                        .WithMany("Rooms")
                        .HasForeignKey("RegionId");

                    b.HasOne("GameServer.Core.Room", null)
                        .WithMany("Exits")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("GameServer.Core.Region", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("GameServer.Core.Room", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("Exits");
                });
#pragma warning restore 612, 618
        }
    }
}
